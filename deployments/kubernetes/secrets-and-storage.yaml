apiVersion: v1
kind: Secret
metadata:
  name: ai-hub-secrets
  namespace: ai-hub
  labels:
    app: ai-hub-apps
type: Opaque
data:
  # Base64 encoded values - replace with your actual API keys
  # To encode: echo -n "your-api-key" | base64
  openai-api-key: ""  # Replace with base64 encoded OpenAI API key
  anthropic-api-key: ""  # Replace with base64 encoded Anthropic API key
  google-api-key: ""  # Replace with base64 encoded Google API key
  mistral-api-key: ""  # Replace with base64 encoded Mistral API key
  jwt-secret: ""  # Replace with base64 encoded JWT secret (32+ chars recommended)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-hub-data-pvc
  namespace: ai-hub
  labels:
    app: ai-hub-apps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2  # AWS EBS, change as needed for your environment
---
# Namespace definition
apiVersion: v1
kind: Namespace
metadata:
  name: ai-hub
  labels:
    name: ai-hub
    app: ai-hub-apps
---
# Network Policy for security (optional)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-hub-network-policy
  namespace: ai-hub
spec:
  podSelector:
    matchLabels:
      app: ai-hub-apps
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - {}  # Allow all egress (for API calls to LLM providers)