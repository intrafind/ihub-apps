{
  "name": "ai-hub-apps",
  "version": "1.0.0",
  "description": "AI Hub Applications Platform",
  "type": "module",
  "bin": {
    "ai-hub-apps": "./server/pkg-entry.cjs"
  },
  "pkg": {
    "targets": ["node18-macos-x64", "node18-linux-x64", "node18-win-x64"],
    "outputPath": "dist-bin",
    "assets": [
      "dist/public/**/*",
      "dist/contents/**/*",
      "dist/server/**/*"
    ],
    "scripts": [
      "dist/server/*.js",
      "dist/server/adapters/*.js"
    ]
  },
  "scripts": {
    "server": "cd server && node server.js",
    "client": "cd client && npm run dev",
    "dev": "concurrently \"npm run server\" \"npm run client\"",
    "install:all": "npm install && cd client && npm install && cd ../server && npm install",
    "build": "npm run build:clean && npm run build:client && npm run build:server && npm run build:config && npm run build:contents",
    "build:clean": "rimraf dist",
    "build:client": "cd client && npm run build && mkdir -p ../dist/public && cp -r dist/* ../dist/public/",
    "build:contents": "mkdir -p dist/contents && cp -r contents/* dist/contents/",
    "build:server": "mkdir -p dist/server && cp -r server/*.js dist/server/ && cp server/*.cjs dist/server/ && cp server/package.json dist/server/ && cp -r server/adapters dist/server/",
    "build:config": "cp package.json dist/ && npm run build:dotenv",
    "build:dotenv": "[ -f .env ] && cp .env dist/ || echo 'No .env file found, skipping'",
    "build:package": "cd dist && npm install --production && cd server && npm install --production",
    "start": "cd server && node server.js",
    "start:prod": "cd dist && node server/start-prod.js",
    "prod:build": "npm run build && npm run build:package",
    "prod:deploy": "npm run prod:build && npm run start:prod",
    "build:binary": "npm run prod:build && pkg . --options max_old_space_size=4096 --no-bytecode",
    "build:binary:macos": "npm run prod:build && pkg . --target node18-macos-x64 --options max_old_space_size=4096 --no-bytecode",
    "build:binary:linux": "npm run prod:build && pkg . --target node18-linux-x64 --options max_old_space_size=4096 --no-bytecode",
    "build:binary:windows": "npm run prod:build && pkg . --target node18-win-x64 --options max_old_space_size=4096 --no-bytecode"
  },
  "keywords": [
    "ai",
    "llm",
    "chatbot",
    "applications"
  ],
  "dependencies": {
    "concurrently": "^9.1.2",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "node-fetch": "^3.3.0"
  },
  "devDependencies": {
    "nodemon": "^3.1.9",
    "rimraf": "^6.0.1"
  },
  "engines": {
    "node": ">=20.0.0"
  }
}
